AWSTemplateFormatVersion: '2010-09-09'
Description: Block application network traffic from experiment Region to target Region and pause cross-Region replication

Parameters:
  Env:
    Type: String
    Default: ''
    Description: String to enable multiple deployments per AWS region

  Duration:
    Type: String
    Default: PT20M
    Description: The duration for which the actions will be performed

  Region:
    Type: String
    Default: us-west-2
    Description: The region in which the actions will be performed

  TransitGatewayTagValue:
    Type: String
    Default: True
    Description: The value of the tag for identifying the Transit Gateway

  SubnetTagValue:
    Type: String
    Default: true
    Description: The value of the tag for identifying the Subnet

  S3BucketTagValue:
    Type: String
    Default: true
    Description: The value of the tag for identifying the S3 Bucket

  DynamoDBTagValue:
    Type: String
    Default: true
    Description: The value of the tag for identifying the DynamoDB Global Table

Resources:
  MultiRegionScenario:
    Type: AWS::FIS::ExperimentTemplate
    Properties:
      Description: Block application network traffic from experiment Region to target Region and pause cross-Region replication
      RoleArn: !GetAtt ExperimentRole.Arn
      Targets:
        TransitGateway:
          ResourceType: aws:ec2:transit-gateway
          ResourceTags:
            ChaosAllowed: !Ref TransitGatewayTagValue
          SelectionMode: ALL
        Subnet:
          ResourceType: aws:ec2:subnet
          ResourceTags:
            ChaosAllowed: !Ref SubnetTagValue
          SelectionMode: ALL
        S3Bucket:
          ResourceType: aws:s3:bucket
          ResourceTags:
            ChaosAllowed: !Ref S3BucketTagValue
          SelectionMode: ALL
        DynamoDBGlobalTable:
          ResourceType: aws:dynamodb:global-table
          ResourceTags:
            ChaosAllowed: !Ref DynamoDBTagValue
          SelectionMode: ALL
      Actions:
        DisruptTransitGatewayConnectivity:
          ActionId: aws:network:transit-gateway-disrupt-cross-region-connectivity
          Parameters:
            duration: !Ref Duration
            region: !Ref Region
          Targets:
            TransitGateways: TransitGateway
        DisruptSubnetConnectivity:
          ActionId: aws:network:route-table-disrupt-cross-region-connectivity
          Parameters:
            duration: !Ref Duration
            region: !Ref Region
          Targets:
            Subnets: Subnet
        PauseS3Replication:
          ActionId: aws:s3:bucket-pause-replication
          Parameters:
            duration: !Ref Duration
            region: !Ref Region
          Targets:
            Buckets: S3Bucket
        PauseDynamoDBReplication:
          ActionId: aws:dynamodb:global-table-pause-replication
          Parameters:
            duration: !Ref Duration
          Targets:
            Tables: DynamoDBGlobalTable
      StopConditions:
        - Source: none
      LogConfiguration:
        LogSchemaVersion: 2
        CloudWatchLogsConfiguration:
          LogGroupArn: !GetAtt FISExperimentLogGroup.Arn
      Tags:
        Name: !Sub 'Cross-Region: Connectivity to ${Region}'
        Env: !Ref Env
      ExperimentOptions:
        AccountTargeting: single-account
        EmptyTargetResolutionMode: skip

  ExperimentRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: fis.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CrossRegionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Sid: RouteTableDisruptConnectivity1
              Effect: Allow
              Action: 'ec2:CreateRouteTable'
              Resource: 'arn:aws:ec2:*:*:route-table/*'
              Condition:
                StringEquals:
                  'aws:RequestTag/managedByFIS': 'true'
            - Sid: RouteTableDisruptConnectivity2
              Effect: Allow
              Action: 'ec2:CreateRouteTable'
              Resource: 'arn:aws:ec2:*:*:vpc/*'
            - Sid: RouteTableDisruptConnectivity21
              Effect: Allow
              Action: 'ec2:CreateTags'
              Resource: 'arn:aws:ec2:*:*:route-table/*'
              Condition:
                StringEquals:
                  'ec2:CreateAction': CreateRouteTable
                  'aws:RequestTag/managedByFIS': 'true'
            - Sid: RouteTableDisruptConnectivity3
              Effect: Allow
              Action: 'ec2:CreateTags'
              Resource: 'arn:aws:ec2:*:*:network-interface/*'
              Condition:
                StringEquals:
                  'ec2:CreateAction': CreateNetworkInterface
                  'aws:RequestTag/managedByFIS': 'true'
            - Sid: RouteTableDisruptConnectivity4
              Effect: Allow
              Action: 'ec2:CreateTags'
              Resource: 'arn:aws:ec2:*:*:prefix-list/*'
              Condition:
                StringEquals:
                  'ec2:CreateAction': CreateManagedPrefixList
                  'aws:RequestTag/managedByFIS': 'true'
            - Sid: RouteTableDisruptConnectivity5
              Effect: Allow
              Action: 'ec2:DeleteRouteTable'
              Resource:
                - 'arn:aws:ec2:*:*:route-table/*'
                - 'arn:aws:ec2:*:*:vpc/*'
              Condition:
                StringEquals:
                  'ec2:ResourceTag/managedByFIS': 'true'
            - Sid: RouteTableDisruptConnectivity6
              Effect: Allow
              Action: 'ec2:CreateRoute'
              Resource: 'arn:aws:ec2:*:*:route-table/*'
              Condition:
                StringEquals:
                  'ec2:ResourceTag/managedByFIS': 'true'
            - Sid: RouteTableDisruptConnectivity7
              Effect: Allow
              Action: 'ec2:CreateNetworkInterface'
              Resource: 'arn:aws:ec2:*:*:network-interface/*'
              Condition:
                StringEquals:
                  'aws:RequestTag/managedByFIS': 'true'
            - Sid: RouteTableDisruptConnectivity8
              Effect: Allow
              Action: 'ec2:CreateNetworkInterface'
              Resource:
                - 'arn:aws:ec2:*:*:subnet/*'
                - 'arn:aws:ec2:*:*:security-group/*'
            - Sid: RouteTableDisruptConnectivity9
              Effect: Allow
              Action: 'ec2:DeleteNetworkInterface'
              Resource: 'arn:aws:ec2:*:*:network-interface/*'
              Condition:
                StringEquals:
                  'ec2:ResourceTag/managedByFIS': 'true'
            - Sid: RouteTableDisruptConnectivity10
              Effect: Allow
              Action: 'ec2:CreateManagedPrefixList'
              Resource: 'arn:aws:ec2:*:*:prefix-list/*'
              Condition:
                StringEquals:
                  'aws:RequestTag/managedByFIS': 'true'
            - Sid: RouteTableDisruptConnectivity11
              Effect: Allow
              Action: 'ec2:DeleteManagedPrefixList'
              Resource: 'arn:aws:ec2:*:*:prefix-list/*'
              Condition:
                StringEquals:
                  'ec2:ResourceTag/managedByFIS': 'true'
            - Sid: RouteTableDisruptConnectivity12
              Effect: Allow
              Action: 'ec2:ModifyManagedPrefixList'
              Resource: 'arn:aws:ec2:*:*:prefix-list/*'
              Condition:
                StringEquals:
                  'ec2:ResourceTag/managedByFIS': 'true'
            - Sid: RouteTableDisruptConnectivity13
              Effect: Allow
              Action:
                - 'ec2:DescribeNetworkInterfaces'
                - 'ec2:DescribeVpcs'
                - 'ec2:DescribeVpcPeeringConnections'
                - 'ec2:DescribeManagedPrefixLists'
                - 'ec2:DescribeSubnets'
                - 'ec2:DescribeRouteTables'
                - 'ec2:DescribeVpcEndpoints'
              Resource: '*'
            - Sid: RouteTableDisruptConnectivity14
              Effect: Allow
              Action: 'ec2:ReplaceRouteTableAssociation'
              Resource:
                - 'arn:aws:ec2:*:*:subnet/*'
                - 'arn:aws:ec2:*:*:route-table/*'
            - Sid: RouteTableDisruptConnectivity15
              Effect: Allow
              Action: 'ec2:GetManagedPrefixListEntries'
              Resource: 'arn:aws:ec2:*:*:prefix-list/*'
            - Sid: RouteTableDisruptConnectivity16
              Effect: Allow
              Action: 'ec2:AssociateRouteTable'
              Resource:
                - 'arn:aws:ec2:*:*:subnet/*'
                - 'arn:aws:ec2:*:*:route-table/*'
            - Sid: RouteTableDisruptConnectivity17
              Effect: Allow
              Action: 'ec2:DisassociateRouteTable'
              Resource:
                - 'arn:aws:ec2:*:*:route-table/*'
              Condition:
                StringEquals:
                  'ec2:ResourceTag/managedByFIS': 'true'
            - Sid: RouteTableDisruptConnectivity18
              Effect: Allow
              Action: 'ec2:DisassociateRouteTable'
              Resource:
                - 'arn:aws:ec2:*:*:subnet/*'
            - Sid: RouteTableDisruptConnectivity19
              Effect: Allow
              Action: 'ec2:ModifyVpcEndpoint'
              Resource:
                - 'arn:aws:ec2:*:*:route-table/*'
              Condition:
                StringEquals:
                  'ec2:ResourceTag/managedByFIS': 'true'
            - Sid: RouteTableDisruptConnectivity20
              Effect: Allow
              Action: 'ec2:ModifyVpcEndpoint'
              Resource:
                - 'arn:aws:ec2:*:*:vpc-endpoint/*'
            - Sid: TransitGatewayDisruptConnectivity1
              Effect: Allow
              Action:
                - 'ec2:DisassociateTransitGatewayRouteTable'
                - 'ec2:AssociateTransitGatewayRouteTable'
              Resource:
                - 'arn:aws:ec2:*:*:transit-gateway-route-table/*'
                - 'arn:aws:ec2:*:*:transit-gateway-attachment/*'
            - Sid: TransitGatewayDisruptConnectivity2
              Effect: Allow
              Action:
                - 'ec2:DescribeTransitGatewayPeeringAttachments'
                - 'ec2:DescribeTransitGatewayAttachments'
                - 'ec2:DescribeTransitGateways'
              Resource: '*'
            - Sid: S3CrossRegion1
              Effect: Allow
              Action:
                - 's3:ListAllMyBuckets'
              Resource: '*'
            - Sid: S3CrossRegion2
              Effect: Allow
              Action:
                - 'tag:GetResources'
              Resource: '*'
            - Sid: S3CrossRegion3
              Effect: Allow
              Action:
                - 's3:PauseReplication'
              Resource: 'arn:aws:s3:::*'
              Condition:
                StringLike:
                  's3:DestinationRegion': '*'
            - Sid: S3CrossRegion4
              Effect: Allow
              Action:
                - 's3:GetReplicationConfiguration'
                - 's3:PutReplicationConfiguration'
              Resource: 'arn:aws:s3:::*'
              Condition:
                BoolIfExists:
                  's3:isReplicationPauseRequest': 'true'
            - Sid: DdbCrossRegion1
              Effect: Allow
              Action:
                - 'tag:GetResources'
              Resource: '*'
            - Sid: DdbCrossRegion2
              Effect: Allow
              Action:
                - 'dynamodb:DescribeTable'
                - 'dynamodb:DescribeGlobalTable'
              Resource:
                - 'arn:aws:dynamodb:*:*:table/*'
                - 'arn:aws:dynamodb:*:*:global-table/*'
            - Sid: DdbCrossRegion3
              Effect: Allow
              Action:
                - 'kms:DescribeKey'
                - 'kms:GetKeyPolicy'
                - 'kms:PutKeyPolicy'
              Resource: 'arn:aws:kms:*:*:key/*'
        - PolicyName: FISExperimentPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ec2:*'
                  - 's3:*'
                  - 'dynamodb:*'
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:PrincipalAccount: !Sub "${AWS::AccountId}"
                    aws:ResourceAccount: !Ref 'AWS::AccountId'
        - PolicyName: AZDisruptionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowRouteTableDisruptions
                Effect: Allow
                Action:
                  - 'ec2:DescribeRouteTables'
                  - 'ec2:ReplaceRoute'
                  - 'ec2:CreateRoute'
                  - 'ec2:DeleteRoute'
                  - 'ec2:DescribeRouteTables'
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:PrincipalAccount: !Sub "${AWS::AccountId}"
                    aws:ResourceAccount: !Ref 'AWS::AccountId'
              - Sid: AllowFISExperimentLoggingActionsCloudwatch
                Effect: Allow
                Action:
                  - 'logs:CreateLogDelivery'
                  - 'logs:PutResourcePolicy'
                  - 'logs:DescribeResourcePolicies'
                  - 'logs:DescribeLogGroups'
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:PrincipalAccount: !Sub "${AWS::AccountId}"
                    aws:ResourceAccount: !Ref 'AWS::AccountId'
              - Effect: Allow
                Action: 'ec2:CreateTags'
                Resource: 'arn:aws:ec2:*:*:network-acl/*'
                Condition:
                  StringEquals:
                    'ec2:CreateAction': CreateNetworkAcl
                    'aws:RequestTag/managedByFIS': 'true'
              - Effect: Allow
                Action: 'ec2:CreateNetworkAcl'
                Resource: 'arn:aws:ec2:*:*:network-acl/*'
                Condition:
                  StringEquals:
                    'aws:RequestTag/managedByFIS': 'true'
              - Effect: Allow
                Action:
                  - 'ec2:CreateNetworkAclEntry'
                  - 'ec2:DeleteNetworkAcl'
                Resource:
                  - 'arn:aws:ec2:*:*:network-acl/*'
                  - 'arn:aws:ec2:*:*:vpc/*'
                Condition:
                  StringEquals:
                    'ec2:ResourceTag/managedByFIS': 'true'
              - Effect: Allow
                Action: 'ec2:CreateNetworkAcl'
                Resource: 'arn:aws:ec2:*:*:vpc/*'
                Condition:
                  StringEquals:
                    aws:PrincipalAccount: !Sub "${AWS::AccountId}"
                    aws:ResourceAccount: !Ref 'AWS::AccountId'
              - Effect: Allow
                Action:
                  - 'ec2:DescribeVpcs'
                  - 'ec2:DescribeManagedPrefixLists'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeNetworkAcls'
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:PrincipalAccount: !Sub "${AWS::AccountId}"
                    aws:ResourceAccount: !Ref 'AWS::AccountId'
              - Effect: Allow
                Action: 'ec2:ReplaceNetworkAclAssociation'
                Resource:
                  - 'arn:aws:ec2:*:*:subnet/*'
                  - 'arn:aws:ec2:*:*:network-acl/*'
              - Effect: Allow
                Action:
                  - 'rds:FailoverDBCluster'
                Resource:
                  - 'arn:aws:rds:*:*:cluster:*'
              - Effect: Allow
                Action:
                  - 'rds:RebootDBInstance'
                Resource:
                  - 'arn:aws:rds:*:*:db:*'
              - Effect: Allow
                Action:
                  - 'elasticache:DescribeReplicationGroups'
                  - 'elasticache:InterruptClusterAzPower'
                Resource:
                  - 'arn:aws:elasticache:*:*:replicationgroup:*'
              - Sid: TargetResolutionByTags
                Effect: Allow
                Action:
                  - 'tag:GetResources'
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:PrincipalAccount: !Sub "${AWS::AccountId}"
                    aws:ResourceAccount: !Ref 'AWS::AccountId'
              - Effect: Allow
                Action:
                  - 'ec2:StartInstances'
                  - 'ec2:StopInstances'
                Resource: 'arn:aws:ec2:*:*:instance/*'
              - Effect: Allow
                Action:
                  - 'ec2:DescribeInstances'
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:PrincipalAccount: !Sub "${AWS::AccountId}"
                    aws:ResourceAccount: !Ref 'AWS::AccountId'
              - Effect: Allow
                Action:
                  - 'kms:CreateGrant'
                Resource:
                  - 'arn:aws:kms:*:*:key/*'
                Condition:
                  StringLike:
                    'kms:ViaService': ec2.*.amazonaws.com
                  Bool:
                    'kms:GrantIsForAWSResource': 'true'
              - Effect: Allow
                Action:
                  - 'ec2:DescribeVolumes'
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:PrincipalAccount: !Sub "${AWS::AccountId}"
                    aws:ResourceAccount: !Ref 'AWS::AccountId'
              - Effect: Allow
                Action:
                  - 'ec2:PauseVolumeIO'
                Resource: 'arn:aws:ec2:*:*:volume/*'
              - Sid: AllowInjectAPI
                Effect: Allow
                Action:
                  - 'ec2:InjectApiError'
                Resource:
                  - '*'
                Condition:
                  'ForAnyValue:StringEquals':
                    'ec2:FisActionId':
                      - 'aws:ec2:api-insufficient-instance-capacity-error'
                      - 'aws:ec2:asg-insufficient-instance-capacity-error'
              - Sid: DescribeAsg
                Effect: Allow
                Action:
                  - 'autoscaling:DescribeAutoScalingGroups'
                Resource:
                  - '*'
                Condition:
                  StringEquals:
                    aws:PrincipalAccount: !Sub "${AWS::AccountId}"
                    aws:ResourceAccount: !Ref 'AWS::AccountId'

  FISLogGroupKey:
    Type: AWS::KMS::Key
    Properties:
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-loggroup
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join
                - ''
                - - !Sub 'arn:${AWS::Partition}:iam::'
                  - !Ref 'AWS::AccountId'
                  - ':root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Enable Cloudwatch access
            Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: '*'

  FISExperimentLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      KmsKeyId: !GetAtt FISLogGroupKey.Arn
      LogGroupName: chaos-experiment-logs
      RetentionInDays: 7

Outputs:
  ExperimentTemplateId:
    Description: The ID of the created FIS experiment template
    Value: !Ref MultiRegionScenario
