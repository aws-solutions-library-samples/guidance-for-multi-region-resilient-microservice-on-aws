{
 "Description": "Solution that uses SSM Automation to restore encrypted snapshots of RDS cluster Orders DB",
 "AWSTemplateFormatVersion": "2010-09-09",
 "Parameters": {
  "NamingPrefix": {
   "Type": "String",
   "Default": "orders",
   "Description": "Enter the Naming Prefix for resources created"
  },
  "Env": {
   "Type": "String",
   "Default": "",
   "Description": "String to enable multiple deployments per AWS region"
  },
  "SourceRegion": {
   "Type": "String",
   "Default": "us-east-1",
   "Description": "Enter the Primary Region"
  },
  "TargetRegion": {
   "Type": "String",
   "Default": "us-west-2",
   "Description": "Enter the Standby Region"
  },
  "DBClusterIdentifier": {
   "Type": "String",
   "Default": "reconciliation-db-cluster"
  },
  "GlobalClusterIdentifier": {
   "Type": "String",
   "Default": "global-db-cluster"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Resources": {
  "SubnetGroup": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "orders-subnet-group",
    "SubnetIds": [
     {
      "Fn::Sub": "{{resolve:ssm:Subnet1${Env}}}"
     },
     {
      "Fn::Sub": "{{resolve:ssm:Subnet2${Env}}}"
     },
     {
      "Fn::Sub": "{{resolve:ssm:Subnet3${Env}}}"
     }
    ]
   }
  },
  "DBCluster": {
   "Type": "AWS::RDS::DBCluster",
   "Properties": {
    "AutoMinorVersionUpgrade": true,
    "BackupRetentionPeriod": 7,
    "CopyTagsToSnapshot": true,
    "DBClusterIdentifier": {
     "Fn::Sub": "${NamingPrefix}-${DBClusterIdentifier}-${AWS::Region}${Env}"
    },
    "DBSubnetGroupName": {
     "Ref": "SubnetGroup"
    },
    "DeletionProtection": false,
    "EnableCloudwatchLogsExports": [
     "audit",
     "error",
     "general",
     "slowquery"
    ],
    "EnableIAMDatabaseAuthentication": true,
    "Engine": "aurora-mysql",
    "EngineVersion": "8.0.mysql_aurora.3.04.0",
    "KmsKeyId": {
     "Fn::Sub": "{{resolve:secretsmanager:mr-app/orders-${TargetRegion}-${GlobalClusterIdentifier}-Snapshot-KeyArn${Env}}}"
    },
    "MasterUserPassword": {
     "Fn::Sub": "{{resolve:secretsmanager:mr-app/${NamingPrefix}-${GlobalClusterIdentifier}-UserCredentials${Env}:SecretString:password}}"
    },
    "MasterUsername": {
     "Fn::Sub": "{{resolve:secretsmanager:mr-app/${NamingPrefix}-${GlobalClusterIdentifier}-UserCredentials${Env}:SecretString:username}}"
    },
    "Port": 3306,
    "ServerlessV2ScalingConfiguration": {
     "MaxCapacity": 8,
     "MinCapacity": 1
    },
    "StorageEncrypted": true,
    "Tags": [
     {
      "Key": "NamingPrefix",
      "Value": {
       "Ref": "NamingPrefix"
      }
     }
    ],
    "VpcSecurityGroupIds": [
     {
      "Fn::Sub": "{{resolve:ssm:${NamingPrefix}-aurora-mysql-sg-${TargetRegion}${Env}}}"
     }
    ]
   },
   "DependsOn": [
    "SubnetGroup"
   ]
  },
  "DBInstance1": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllowMajorVersionUpgrade": false,
    "AutoMinorVersionUpgrade": true,
    "DBClusterIdentifier": {
     "Fn::Sub": "${NamingPrefix}-${DBClusterIdentifier}-${AWS::Region}${Env}"
    },
    "DBInstanceClass": "db.r5.large",
    "DBInstanceIdentifier": {
     "Fn::Sub": "${NamingPrefix}-${DBClusterIdentifier}${Env}-1"
    },
    "DBSubnetGroupName": {
     "Ref": "SubnetGroup"
    },
    "Engine": "aurora-mysql",
    "MonitoringInterval": 1,
    "MonitoringRoleArn": {
     "Fn::Sub": "{{resolve:secretsmanager:mr-app/${NamingPrefix}-${GlobalClusterIdentifier}-MonitoringIAMRoleArn${Env}}}"
    },
    "PubliclyAccessible": false
   },
   "DependsOn": [
    "DBCluster",
    "SubnetGroup"
   ]
  },
  "DBClusterArn": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Sub": "Reconciliation DBCluster Arn for ${NamingPrefix}"
    },
    "KmsKeyId": "alias/aws/secretsmanager",
    "Name": {
     "Fn::Sub": "mr-app/${NamingPrefix}-${DBClusterIdentifier}-${AWS::Region}${Env}"
    },
    "ReplicaRegions": [
     {
      "Region": "us-east-1"
     }
    ],
    "SecretString": {
     "Fn::GetAtt": "DBCluster.DBClusterArn"
    }
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/yWPSw7CMAxEz8I+DR+xYE2RECsQPUCVJgYFWqfyBxZV705SVh4/jcbjnd3u9nazcl+ufHhXfezs1Ijzb+P7pOGRaHASE7YRfa8BbP3Ay1+aLG+O3AACZHJCO1FgO2V8OjbaIciZko5mAXWvXHzLckEWhx5mw+AJhAeH7glU0puFzMV4VRlViroDJyW/3KwThlg6zQZTbvTi9Wd7sJv8xotjrEhR4gD2/p8/D+hxqOMAAAA="
   },
   "Metadata": {
    "aws:cdk:path": "CdkNagScanStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "DBEndpoint": {
   "Value": {
    "Fn::GetAtt": "DBCluster.Endpoint.Address"
   }
  },
  "DBPort": {
   "Value": {
    "Fn::GetAtt": "DBCluster.Endpoint.Port"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}